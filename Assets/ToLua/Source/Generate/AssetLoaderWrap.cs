//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AssetLoaderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AssetLoader), typeof(System.Object));
		L.RegFunction("SetLoader", SetLoader);
		L.RegFunction("Load", Load);
		L.RegFunction("Return", Return);
		L.RegFunction("Release", Release);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("isDone", get_isDone, null);
		L.RegVar("AssetsPath", get_AssetsPath, null);
		L.RegVar("mainAsset", get_mainAsset, null);
		L.RegVar("doneEvent", get_doneEvent, null);
		L.RegVar("progressEvent", get_progressEvent, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLoader(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				AssetLoader obj = (AssetLoader)ToLua.CheckObject<AssetLoader>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.SetLoader(arg0);
				return 0;
			}
			else if (count == 3)
			{
				AssetLoader obj = (AssetLoader)ToLua.CheckObject<AssetLoader>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Events.UnityAction<AssetLoader> arg1 = (UnityEngine.Events.UnityAction<AssetLoader>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<AssetLoader>>(L, 3);
				obj.SetLoader(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				AssetLoader obj = (AssetLoader)ToLua.CheckObject<AssetLoader>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Events.UnityAction<AssetLoader> arg1 = (UnityEngine.Events.UnityAction<AssetLoader>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<AssetLoader>>(L, 3);
				UnityEngine.Events.UnityAction<float> arg2 = (UnityEngine.Events.UnityAction<float>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<float>>(L, 4);
				obj.SetLoader(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: AssetLoader.SetLoader");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Load(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetLoader obj = (AssetLoader)ToLua.CheckObject<AssetLoader>(L, 1);
			obj.LoadAsync();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Return(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetLoader obj = (AssetLoader)ToLua.CheckObject<AssetLoader>(L, 1);
			obj.Return();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetLoader obj = (AssetLoader)ToLua.CheckObject<AssetLoader>(L, 1);
			obj.Release();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isDone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetLoader obj = (AssetLoader)o;
			bool ret = obj.isDone;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isDone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssetsPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetLoader obj = (AssetLoader)o;
			string ret = obj.AssetsPath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AssetsPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mainAsset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetLoader obj = (AssetLoader)o;
			UnityEngine.Object ret = obj.mainAsset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mainAsset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_doneEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetLoader obj = (AssetLoader)o;
			UnityEventEx<AssetLoader> ret = obj.doneEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index doneEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_progressEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetLoader obj = (AssetLoader)o;
			UnityEventEx<float> ret = obj.progressEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index progressEvent on a nil value");
		}
	}
}

